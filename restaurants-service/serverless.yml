# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: restaurants-service
#app: your-app-name
#org: your-org-name

variablesResolutionMode: 20210326
configValidationMode: error
useDotenv: true
projectDir: ..

plugins:
  - serverless-offline
  - serverless-ruby-package

package:
  include:
    - handler.rb
    - app/**

custom:
  # Do this if you only want to load env vars into the Serverless environment
  # This will make env vars available here and in any Serverless plugins
  dotenvVars: ${file(../shared/env.js)}

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: ruby2.7
  lambdaHashingVersion: 20201221
  region: us-east-2
  environment: ${self:custom.dotenvVars}

functions:
  echo_body:
    handler: handler.echo_request
    events:
      - http:
          path: /echo
          method: post
  echo_parms:
    handler: handler.echo_request
    events:
      - http:
          path: /echo/{uuid}
          method: get
  index:
    handler: handler.index
    events:
      - httpApi:
          path: /restaurants
          method: get
  show:
    handler: handler.show
    events:
      - httpApi:
          path: /restaurants/{uuid}
          method: get
  create:
    handler: handler.create
    events:
      - httpApi:
          path: /restaurants
          method: post
  update:
    handler: handler.update
    events:
      - httpApi:
          path: /restaurants/{uuid}
          method: put
  destroy:
    handler: handler.destroy
    events:
      - httpApi:
          path: /restaurants/{uuid}
          method: delete
  db-create:
    handler: handler.db_event
  db-migrate-preview:
    handler: handler.db_event
  db-migrate:
    handler: handler.db_event
  db-schema-dump:
    handler: handler.db_event
